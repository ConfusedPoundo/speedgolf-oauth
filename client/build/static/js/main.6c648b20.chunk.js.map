{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/FloatingButton.js","md5.js","components/LoginPage.js","components/FeedPage.js","components/RoundsTable.js","components/RoundForm.js","components/Rounds.js","components/CoursesPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","Object","freeze","NavBar","handleMenuBtnClick","props","mode","changeMode","toggleMenuOpen","getMenuBtnIcon","menuOpen","className","onClick","this","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","user","profileImageUrl","displayName","showAbout","ModeBar","handleModeBtnClick","newMode","FloatingButton","handleClick","icon","md5cycle","x","k","a","b","c","d","ff","gg","hh","ii","add32","cmn","q","s","t","md5blk","i","md5blks","charCodeAt","hex_chr","split","rhex","n","j","md5","length","join","hex","state","substring","tail","md51","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUser","emailInputRef","current","value","username","provider","setAuthenticated","handleLoginSubmit","event","preventDefault","url","passwordInputRef","fetch","method","res","status","window","open","text","resText","loginMsg","setTimeout","hideErrorMsg","handleOAuthLogin","handleOAuthLoginClick","checkAccountValidity","accountPassword","accountPasswordRepeat","repeatPassRef","setCustomValidity","handleNewAccountChange","target","name","handleCreateAccount","loginInfo","userId","accountName","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","headers","body","JSON","stringify","alert","showAccountDialog","handleLoginChange","thisUser","data","parse","localStorage","getItem","hasOwnProperty","accountInfo","renderAccountDialog","role","onSubmit","type","size","placeholder","pattern","ref","newUserRef","required","onChange","rows","cols","maxLength","handleLookUpAccount","accountEmailRef","focus","json","result","select","question","resetEmail","resetQuestion","showLookUpAccountDialog","showSecurityQuestionDialog","renderLookUpAccountDialog","handleSecurityQuestionResponse","securityAnswerRef","resetAnswer","showPasswordResetDialog","renderSecurityQuestionDialog","readOnly","handleResetPassword","resetPasswordRef","resetPasswordRepeatRef","resetInfo","answer","newPassword","renderPasswordResetDialog","createRef","githubIcon","githubLabel","htmlFor","style","padding","fontSize","FeedPage","fontStyle","RoundsTable","editRound","setEditId","confirmDelete","setDeleteId","doDelete","deleteRound","cancelDelete","renderConfirmDeleteDialog","renderTable","table","r","push","key","rounds","date","course","Number","strokes","minutes","seconds","keys","colSpan","RoundForm","handleChange","handleSubmit","faIcon","btnLabel","roundData","saveRound","computeSGS","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","startData","min","max","disabled","Rounds","val","deleteId","editId","newData","newRounds","setItem","addRound","roundNum","roundCount","Fragment","CoursesPage","modeTitle","modeToPage","App","handleChangeMode","openMenu","closeMenu","prevState","userObj","auth","authenticated","stopPropagation","toggleAbout","renderAbout","textAlign","href","addEventListener","then","response","obj","isAuthenticated","removeEventListener","ModePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c648b20.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. If we were using TypeScript, we could\r\nuse the predefined enum type; see\r\nhttps://www.typescriptlang.org/docs/handbook/enums.html. Declaring an enumerated\r\ntype as a JavaScript object has important limitations (see\r\nhttps://stackoverflow.com/questions/287903/what-is-the-preferred-syntax-for-defining-enums-in-javascript),\r\nbut it will do for our purposes*/\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    handleMenuBtnClick = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n          this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n      } else if (this.props.mode != AppMode.LOGIN) {\r\n        this.props.toggleMenuOpen();\r\n      }\r\n    }\r\n\r\n    getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n    }\r\n\r\n    render() {\r\n       return (\r\n        <div className=\"navbar\">  \r\n        <span className=\"navbar-items\">\r\n          <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n            <span id=\"sidemenu-btn-icon\" \r\n              className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n            </span>\r\n          </button>\r\n          <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n          width=\"38px\" />\r\n          <span id=\"topBarTitle\" className=\"navbar-title\">\r\n            &nbsp;{this.props.title}\r\n          </span>\r\n        </span>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n  //renderModeItems -- Renders correct subset of mode menu items based on\r\n  //current mode, which is stored in this.prop.mode. Uses switch statement to\r\n  //determine mode.\r\n  renderModeMenuItems = () => {\r\n    switch (this.props.mode) {\r\n      case AppMode.FEED:\r\n        return(\r\n          <div>\r\n          <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n          <a className=\"menuItem\">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n          </div>\r\n        );\r\n      break;\r\n      case AppMode.ROUNDS:\r\n        return(\r\n          <div>\r\n            <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n            <a className=\"menuItem\">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n          </div>\r\n        );\r\n      break;\r\n      case AppMode.COURSES:\r\n        return(\r\n          <div>\r\n          <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a>\r\n          <a className=\"sidemenu-item\">\r\n              <span className=\"fa fa-search\"></span>&nbsp;Search Courses</a>\r\n          </div>\r\n        );\r\n      default:\r\n          return null;\r\n      }\r\n  }\r\n\r\n    \r\n    render() {\r\n       return (\r\n        <div className= {\"sidemenu \" + \r\n        (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")} >\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.user.profileImageUrl} height='50' width='50' />\r\n            <span className=\"sidemenu-userID\">&nbsp;{this.props.user.displayName}</span>\r\n          </div>\r\n          {/* MENU CONTENT */}\r\n          {/*Mode-based menu items */}\r\n          {this.renderModeMenuItems()}\r\n          {/* Always-there menu items */}\r\n          <a className=\"sidemenu-item\" onClick={this.props.showAbout}><span className=\"fa fa-info-circle\">\r\n              </span>&nbsp;About</a>\r\n          <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.LOGIN)}><span className=\"fa fa-sign-out\">\r\n              </span>&nbsp;Log Out</a>\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass ModeBar extends React.Component {\r\n\r\n    handleModeBtnClick = (newMode) => {\r\n      if (this.props.mode != newMode) {\r\n          this.props.changeMode(newMode);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : \" visible\")}>\r\n          <a className={\"modebar-btn\" + \r\n            (this.props.mode === AppMode.FEED ? \" modebar-item-selected\" : \"\")} \r\n            onClick={this.props.menuOpen ? null : \r\n              () => this.handleModeBtnClick(AppMode.FEED)}>\r\n            <span className=\"modebar-icon nonMenuItem fa fa-th-list\"></span>\r\n            <span className=\"modebar-text\">Feed</span>\r\n          </a>\r\n          <a className={\"modebar-btn\" +\r\n            (this.props.mode === AppMode.ROUNDS ? \" modebar-item-selected\" : \"\")} \r\n            onClick={this.props.menuOpen ? null : \r\n              () => this.handleModeBtnClick(AppMode.ROUNDS)}>\r\n            <span className=\"modebar-icon fa fa-history\"></span>\r\n            <span className=\"modebar-text\">Rounds</span>\r\n          </a>\r\n          <a className={\"modebar-btn\" +\r\n            (this.props.mode === AppMode.COURSES ? \" modebar-item-selected\" : \"\")} \r\n             onClick={this.props.menuOpen ? null : \r\n              () => this.handleModeBtnClick(AppMode.COURSES)}>\r\n            <span className=\"modebar-icon fa fa-flag\"></span>\r\n            <span className=\"modebar-text\">Courses</span>\r\n          </a> \r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n          <a className=\"floatbtn\" onClick={(this.props.menuOpen ? null : \r\n             this.props.handleClick)}>\r\n            <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n          </a>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;","function md5cycle(x, k) {\r\n    var a = x[0], b = x[1], c = x[2], d = x[3];\r\n    \r\n    a = ff(a, b, c, d, k[0], 7, -680876936);\r\n    d = ff(d, a, b, c, k[1], 12, -389564586);\r\n    c = ff(c, d, a, b, k[2], 17,  606105819);\r\n    b = ff(b, c, d, a, k[3], 22, -1044525330);\r\n    a = ff(a, b, c, d, k[4], 7, -176418897);\r\n    d = ff(d, a, b, c, k[5], 12,  1200080426);\r\n    c = ff(c, d, a, b, k[6], 17, -1473231341);\r\n    b = ff(b, c, d, a, k[7], 22, -45705983);\r\n    a = ff(a, b, c, d, k[8], 7,  1770035416);\r\n    d = ff(d, a, b, c, k[9], 12, -1958414417);\r\n    c = ff(c, d, a, b, k[10], 17, -42063);\r\n    b = ff(b, c, d, a, k[11], 22, -1990404162);\r\n    a = ff(a, b, c, d, k[12], 7,  1804603682);\r\n    d = ff(d, a, b, c, k[13], 12, -40341101);\r\n    c = ff(c, d, a, b, k[14], 17, -1502002290);\r\n    b = ff(b, c, d, a, k[15], 22,  1236535329);\r\n    \r\n    a = gg(a, b, c, d, k[1], 5, -165796510);\r\n    d = gg(d, a, b, c, k[6], 9, -1069501632);\r\n    c = gg(c, d, a, b, k[11], 14,  643717713);\r\n    b = gg(b, c, d, a, k[0], 20, -373897302);\r\n    a = gg(a, b, c, d, k[5], 5, -701558691);\r\n    d = gg(d, a, b, c, k[10], 9,  38016083);\r\n    c = gg(c, d, a, b, k[15], 14, -660478335);\r\n    b = gg(b, c, d, a, k[4], 20, -405537848);\r\n    a = gg(a, b, c, d, k[9], 5,  568446438);\r\n    d = gg(d, a, b, c, k[14], 9, -1019803690);\r\n    c = gg(c, d, a, b, k[3], 14, -187363961);\r\n    b = gg(b, c, d, a, k[8], 20,  1163531501);\r\n    a = gg(a, b, c, d, k[13], 5, -1444681467);\r\n    d = gg(d, a, b, c, k[2], 9, -51403784);\r\n    c = gg(c, d, a, b, k[7], 14,  1735328473);\r\n    b = gg(b, c, d, a, k[12], 20, -1926607734);\r\n    \r\n    a = hh(a, b, c, d, k[5], 4, -378558);\r\n    d = hh(d, a, b, c, k[8], 11, -2022574463);\r\n    c = hh(c, d, a, b, k[11], 16,  1839030562);\r\n    b = hh(b, c, d, a, k[14], 23, -35309556);\r\n    a = hh(a, b, c, d, k[1], 4, -1530992060);\r\n    d = hh(d, a, b, c, k[4], 11,  1272893353);\r\n    c = hh(c, d, a, b, k[7], 16, -155497632);\r\n    b = hh(b, c, d, a, k[10], 23, -1094730640);\r\n    a = hh(a, b, c, d, k[13], 4,  681279174);\r\n    d = hh(d, a, b, c, k[0], 11, -358537222);\r\n    c = hh(c, d, a, b, k[3], 16, -722521979);\r\n    b = hh(b, c, d, a, k[6], 23,  76029189);\r\n    a = hh(a, b, c, d, k[9], 4, -640364487);\r\n    d = hh(d, a, b, c, k[12], 11, -421815835);\r\n    c = hh(c, d, a, b, k[15], 16,  530742520);\r\n    b = hh(b, c, d, a, k[2], 23, -995338651);\r\n    \r\n    a = ii(a, b, c, d, k[0], 6, -198630844);\r\n    d = ii(d, a, b, c, k[7], 10,  1126891415);\r\n    c = ii(c, d, a, b, k[14], 15, -1416354905);\r\n    b = ii(b, c, d, a, k[5], 21, -57434055);\r\n    a = ii(a, b, c, d, k[12], 6,  1700485571);\r\n    d = ii(d, a, b, c, k[3], 10, -1894986606);\r\n    c = ii(c, d, a, b, k[10], 15, -1051523);\r\n    b = ii(b, c, d, a, k[1], 21, -2054922799);\r\n    a = ii(a, b, c, d, k[8], 6,  1873313359);\r\n    d = ii(d, a, b, c, k[15], 10, -30611744);\r\n    c = ii(c, d, a, b, k[6], 15, -1560198380);\r\n    b = ii(b, c, d, a, k[13], 21,  1309151649);\r\n    a = ii(a, b, c, d, k[4], 6, -145523070);\r\n    d = ii(d, a, b, c, k[11], 10, -1120210379);\r\n    c = ii(c, d, a, b, k[2], 15,  718787259);\r\n    b = ii(b, c, d, a, k[9], 21, -343485551);\r\n    \r\n    x[0] = add32(a, x[0]);\r\n    x[1] = add32(b, x[1]);\r\n    x[2] = add32(c, x[2]);\r\n    x[3] = add32(d, x[3]);\r\n    \r\n    }\r\n    \r\n    function cmn(q, a, b, x, s, t) {\r\n    a = add32(add32(a, q), add32(x, t));\r\n    return add32((a << s) | (a >>> (32 - s)), b);\r\n    }\r\n    \r\n    function ff(a, b, c, d, x, s, t) {\r\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\r\n    }\r\n    \r\n    function gg(a, b, c, d, x, s, t) {\r\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function hh(a, b, c, d, x, s, t) {\r\n    return cmn(b ^ c ^ d, a, b, x, s, t);\r\n    }\r\n    \r\n    function ii(a, b, c, d, x, s, t) {\r\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\r\n    }\r\n    \r\n    function md51(s) {\r\n    var txt = '';\r\n    var n = s.length,\r\n    state = [1732584193, -271733879, -1732584194, 271733878], i;\r\n    for (i=64; i<=s.length; i+=64) {\r\n    md5cycle(state, md5blk(s.substring(i-64, i)));\r\n    }\r\n    s = s.substring(i-64);\r\n    var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];\r\n    for (i=0; i<s.length; i++)\r\n    tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);\r\n    tail[i>>2] |= 0x80 << ((i%4) << 3);\r\n    if (i > 55) {\r\n    md5cycle(state, tail);\r\n    for (i=0; i<16; i++) tail[i] = 0;\r\n    }\r\n    tail[14] = n*8;\r\n    md5cycle(state, tail);\r\n    return state;\r\n    }\r\n    \r\n    /* there needs to be support for Unicode here,\r\n     * unless we pretend that we can redefine the MD-5\r\n     * algorithm for multi-byte characters (perhaps\r\n     * by adding every four 16-bit characters and\r\n     * shortening the sum to 32 bits). Otherwise\r\n     * I suggest performing MD-5 as if every character\r\n     * was two bytes--e.g., 0040 0025 = @%--but then\r\n     * how will an ordinary MD-5 sum be matched?\r\n     * There is no way to standardize text to something\r\n     * like UTF-8 before transformation; speed cost is\r\n     * utterly prohibitive. The JavaScript standard\r\n     * itself needs to look at this: it should start\r\n     * providing access to strings as preformed UTF-8\r\n     * 8-bit unsigned value arrays.\r\n     */\r\n    function md5blk(s) { /* I figured global was faster.   */\r\n    var md5blks = [], i; /* Andy King said do it this way. */\r\n    for (i=0; i<64; i+=4) {\r\n    md5blks[i>>2] = s.charCodeAt(i)\r\n    + (s.charCodeAt(i+1) << 8)\r\n    + (s.charCodeAt(i+2) << 16)\r\n    + (s.charCodeAt(i+3) << 24);\r\n    }\r\n    return md5blks;\r\n    }\r\n    \r\n    var hex_chr = '0123456789abcdef'.split('');\r\n    \r\n    function rhex(n)\r\n    {\r\n    var s='', j=0;\r\n    for(; j<4; j++)\r\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]\r\n    + hex_chr[(n >> (j * 8)) & 0x0F];\r\n    return s;\r\n    }\r\n    \r\n    function hex(x) {\r\n    for (var i=0; i<x.length; i++)\r\n    x[i] = rhex(x[i]);\r\n    return x.join('');\r\n    }\r\n    \r\n    export default function md5(s) {\r\n      return hex(md51(s));\r\n    }\r\n    \r\n    /* this function is much faster,\r\n    so if possible we use it. Some IEs\r\n    are the only ones I know of that\r\n    need the idiotic second function,\r\n    generated by an if clause.  */\r\n    \r\n    function add32(a, b) {\r\n    return (a + b) & 0xFFFFFFFF;\r\n    }\r\n    \r\n    if (md5('hello') != '5d41402abc4b2a76b9719d911017c592') {\r\n    function add32(x, y) {\r\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\r\n    msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n    return (msw << 16) | (lsw & 0xFFFF);\r\n    }\r\n    }","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport md5 from '../md5.js';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //Create a ref for the email input DOM element\r\n        this.emailInputRef = React.createRef();\r\n        this.passwordInputRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.newUserRef = React.createRef();\r\n        this.accountEmailRef = React.createRef();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {loginBtnIcon: \"fa fa-sign-in\",\r\n                      loginBtnLabel: \"Log In\",\r\n                      loginMsg: \"\",\r\n                      githubIcon: \"fa fa-github\",\r\n                      githubLabel: \"Sign in with GitHub\",\r\n                      showAccountDialog: false,\r\n                      showLookUpAccountDialog: false,\r\n                      showSecurityQuestionDialog: false,\r\n                      showPasswordResetDialog: false,\r\n                      resetEmail: \"\",\r\n                      resetQuestion: \"\",\r\n                      resetAnswer: \"\",\r\n                      accountName: \"\",\r\n                      accountPassword: \"\",\r\n                      accountPasswordRepeat: \"\",\r\n                      accountSecurityQuestion: \"\",\r\n                      accountSecurityAnswer: \"\",\r\n                     };\r\n    }\r\n\r\n//Focus cursor in email input field when mounted\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n}\r\n\r\n//handleLogin -- Callback function that sets up initial app state upon login.\r\n//Note: This implements the OLD local authentication strategy that used localStorage\r\nhandleLogin = () => {\r\n    //Stop spinner and set authStrategy to local\r\n    this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                   loginBtnLabel: \"Log In\"});\r\n    //Set current user in parent component\r\n    //With local authentication all we have is an email\r\n    //address; we do not have additional info\r\n    //We'll grab profile pic from the gravatar service. User can create account\r\n    //at http://gravatar.com and define their profile pic.\r\n    this.props.setUser({id: this.emailInputRef.current.value,\r\n        username:  this.emailInputRef.current.value,\r\n        provider: \"local\",\r\n        profileImageUrl: `https://www.gravatar.com/avatar/${md5(this.emailInputRef.current.value)}`});\r\n    //Set authenticated state in parent component\r\n    this.props.setAuthenticated(true);\r\n    //Trigger switch to FEED mode (default app landing page)\r\n    this.props.changeMode(AppMode.FEED);\r\n}\r\n\r\n//handleLoginSubmit (Passport) -- When the user clicks the login button, we want to\r\n//initiate a login using Passport's local method. We accomplish this through a\r\n//post request to the /login route, passing in the username and password\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"/login?username=\" + this.emailInputRef.current.value +\r\n                \"&password=\" + this.passwordInputRef.current.value;\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        //Force componentDidMount to execute.\r\n        //authenticated state will be updated and \r\n        //Session will be deserialized.\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      //Display error message for 3 seconds and invite another login attempt\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     loginMsg: resText}, () => setTimeout(this.hideErrorMsg,3000));\r\n    }\r\n}\r\n\r\n//hideErrorMsg -- Clears the email and pasword field and hides the login error\r\n//message, thus inviting a new attempt.\r\nhideErrorMsg = () => {\r\n    this.emailInputRef.current.value = \"\";\r\n    this.passwordInputRef.current.value = \"\";\r\n    this.setState({loginMsg: \"\"});\r\n}\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n//checkAccountValidity -- Callback function invoked after a form element in\r\n//the 'Create Account' dialog box changes and component state has been\r\n//updated. We need to check whether the passwords match and whether an\r\n//account is already associated with the email address entered. If so, we\r\n//set a custom validity message to be displayed when the user clicks the\r\n//'Create Account' button. Otherwise, we reset the custom validity message\r\n//to empty so that it will NOT fire when the user clicks 'Create Account'.\r\ncheckAccountValidity = () => {\r\n    if (this.state.accountPassword != this.state.accountPasswordRepeat) {\r\n        //Passwords don't match\r\n        this.repeatPassRef.current.setCustomValidity(\"This password must match original password.\");\r\n    } else {\r\n        this.repeatPassRef.current.setCustomValidity(\"\");\r\n    }\r\n    //let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n    //if (data != null && data.hasOwnProperty(this.state.accountName)) {\r\n        //The user name is already taken\r\n   //     this.newUserRef.current.setCustomValidity(\"An account already exists under this email address. Use 'Reset password' to recover the password.\");\r\n   // } else {\r\n   //     this.newUserRef.current.setCustomValidity(\"\");\r\n   // }\r\n}\r\n    \r\n//handleNewAccountChange -- Called when a field in a dialog box form changes.\r\n//Update corresponding state variable and potentially update the custom\r\n//message.\r\nhandleNewAccountChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value},this.checkAccountValidity);\r\n}\r\n\r\n//handleCreateAccount -- Triggered when user clicks on \"Create Account.\"\r\n//Custom data checking ensures user account under this email does not exist\r\n//and that the rest of the info is valid. At this point, we can create \r\n//new object for user, save to localStorage and take user to app's landing page. \r\nhandleCreateAccount = async (event) => {\r\n    event.preventDefault();\r\n    const loginInfo = {userId: this.state.accountName,\r\n                       password: this.state.accountPassword,\r\n                       securityQuestion: this.state.accountSecurityQuestion,\r\n                       securityAnswer: this.state.accountSecurityAnswer};\r\n    const res = await fetch('/newaccount', {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n        method: 'POST',\r\n        body: JSON.stringify(loginInfo)}); \r\n    if (res.status == 200) { //successful account creation!\r\n        alert(\"Your account was successfully created. Please log in using your email and password to continue.\");\r\n        this.setState({showAccountDialog: false});\r\n    } else { //Unsuccessful account creation\r\n      //Grab textual error message\r\n      const resText = await res.text();\r\n      alert(resText); //most likely the username is already taken\r\n    }\r\n}\r\n\r\n//handleLoginChange -- Check the validity of the username (email address)\r\n//password entered into the login page, setting the customValidity message \r\n//appropriately. \r\nhandleLoginChange = (event) => {\r\n    let thisUser = this.emailInputRef.current.value;\r\n    let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n    //Check username and password:\r\n    if (data == null || !data.hasOwnProperty(thisUser)) { \r\n       this.emailInputRef.current.setCustomValidity(\"No account with this email address exists. Choose 'Create an account'.\");\r\n         return; //Exit the function; no need to check pw validity\r\n     } else {\r\n         this.emailInputRef.current.setCustomValidity(\"\");\r\n     }\r\n     if (data[thisUser].accountInfo.password != this.passwordInputRef.current.value) {\r\n        this.passwordInputRef.current.setCustomValidity(\"The password you entered is incorrect. Please try again or choose 'Reset your password'.\");\r\n     } else {\r\n        this.passwordInputRef.current.setCustomValidity(\"\");\r\n     }\r\n }\r\n \r\n        \r\n    //renderAccountDialog -- Present the \"create account\" dialog\r\n    renderAccountDialog = () => {\r\n        return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h3 className=\"modal-title\"><b>Create New Account</b>\r\n                  <button className=\"close-modal-button\" \r\n                    onClick={() => {this.setState({showAccountDialog: false})}}>\r\n                    &times;</button>\r\n                </h3>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={this.handleCreateAccount}>\r\n                <label>\r\n                    Email: \r\n                    <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountName\"\r\n                    type=\"email\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                    ref={this.newUserRef}\r\n                    required={true}\r\n                    value={this.state.accountName}\r\n                    onChange={this.handleNewAccountChange}\r\n                    />\r\n                </label>\r\n                \r\n                <label>\r\n                    Password:\r\n                    <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPassword\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Enter Password\"\r\n                    pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPassword}\r\n                    onChange={this.handleNewAccountChange}\r\n                    />\r\n                </label>\r\n                \r\n                <label>\r\n                    Repeat Password:\r\n                    <input\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountPasswordRepeat\"\r\n                    type=\"password\"\r\n                    size=\"35\"\r\n                    placeholder=\"Repeat Password\"\r\n                    required={true}\r\n                    ref={this.repeatPassRef}\r\n                    value={this.state.accountPasswordRepeat}\r\n                    onChange={this.handleNewAccountChange}\r\n                    />\r\n                </label>\r\n                \r\n                <label>\r\n                    Security Question:\r\n                    <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityQuestion\"\r\n                    size=\"35\"\r\n                    placeholder=\"Security Question\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityQuestion}\r\n                    onChange={this.handleNewAccountChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Answer to Security Question:\r\n                    <textarea\r\n                    className=\"form-control form-text\"\r\n                    name=\"accountSecurityAnswer\"\r\n                    type=\"text\"\r\n                    placeholder=\"Answer\"\r\n                    rows=\"2\"\r\n                    cols=\"35\"\r\n                    maxLength=\"100\"\r\n                    required={true}\r\n                    value={this.state.accountSecurityAnswer}\r\n                    onChange={this.handleNewAccountChange}\r\n                    />\r\n                </label>\r\n                <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                    <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\r\n                </button>\r\n                </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\n//handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n//button, we check whether the account exists. If it does, we update the state,\r\n//setting the resetEmail var to the email entered, hiding the current dialog box\r\n//and showing the security question dialog box.\r\nhandleLookUpAccount = async (event) => {\r\n    event.preventDefault();\r\n    let url = \"/accountexists?userId=\" + this.accountEmailRef.current.value;\r\n    let res = await fetch(url, {method: 'GET'});\r\n    let body;\r\n    if (res.status != 200) {\r\n        alert(\"Sorry, there was a problem communicating with the server. Please try again.\");\r\n        this.accountEmailRef.current.focus();\r\n        return;\r\n    } \r\n    body = await res.json();\r\n    if (!body.result) {\r\n        alert(\"Sorry, there is no account associated with this email address.\");\r\n        this.accountEmailRef.current.select();\r\n        return;\r\n    } \r\n    //if here, account exists -- grab security question\r\n    url = \"/securityquestion?userId=\" + this.accountEmailRef.current.value;\r\n    res = await fetch(url, {method: 'GET'});\r\n    if (res.status != 200) {\r\n        alert(\"Sorry, there was a problem communicating with the server. Please try again.\");\r\n        this.accountEmailRef.current.focus();\r\n        return;\r\n    } \r\n    let question = await res.text();\r\n    this.setState({resetEmail: this.accountEmailRef.current.value, \r\n                   resetQuestion: question,\r\n                   showLookUpAccountDialog: false, \r\n                   showSecurityQuestionDialog: true});\r\n    this.emailInputRef.current.value = \"\"; //clear out field\r\n}\r\n\r\n//renderLookUpAccountDialog -- Present a dialog box for user to enter the email address\r\n//associated with their account in case where they want to reset password\r\nrenderLookUpAccountDialog = () => {\r\n    return (\r\n    <div className=\"modal\" role=\"dialog\">\r\n      <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h3 className=\"modal-title\"><b>Look Up Account</b>\r\n              <button className=\"close-modal-button\" \r\n                onClick={() => {this.setState({showLookUpAccountDialog: false})}}>\r\n                &times;</button>\r\n            </h3>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={this.handleLookUpAccount}>\r\n            <label>\r\n                Account Email Address: \r\n                <input\r\n                className=\"form-control form-text\"\r\n                type=\"email\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Email Address\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                ref={this.accountEmailRef}\r\n                required={true}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n            </button>\r\n            </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );  \r\n}\r\n\r\n//handleSecurityQuestionResponse: When the user clicks on the \"Check Answer\" dialog box\r\n//button, we check whether the security question answer is correct. If it is,\r\n//present dialog box for resetting the password. \r\nhandleSecurityQuestionResponse = async(event) => {\r\n    event.preventDefault();\r\n    let url = \"verifysecurityanswer/?userId=\" + this.state.resetEmail + \r\n      \"&answer=\" + this.securityAnswerRef.current.value;\r\n    let res = await fetch(url, {method: 'GET'});\r\n    if (res.status != 200) {\r\n        alert(\"There was a problem communicating with the server. Try again.\");\r\n        return;\r\n    } \r\n    let body = await res.json();\r\n    if (!body.result) {\r\n        alert(\"Sorry, that is not the correct answer to the security question.\");\r\n        this.securityAnswerRef.current.select();\r\n        return;\r\n    } \r\n    this.setState({resetAnswer: this.securityAnswerRef.current.value,\r\n                   showSecurityQuestionDialog: false, \r\n                   showPasswordResetDialog: true});\r\n     this.securityAnswerRef.current.value = \"\"; //clear out field\r\n}\r\n\r\n//renderSecurityQuestionDialog -- Present a dialog box for user to enter answer\r\n//to their security question.\r\nrenderSecurityQuestionDialog = () => {\r\n    return (\r\n    <div className=\"modal\" role=\"dialog\">\r\n      <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n              <button className=\"close-modal-button\" \r\n                onClick={() => { this.setState({resetEmail: \"\", \r\n                                 resetQuestion: \"\",\r\n                                 resetAnswer: \"\",\r\n                                 showSecurityQuestionDialog: false})}}>\r\n                &times;</button>\r\n            </h3>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={this.handleSecurityQuestionResponse}>\r\n            <label>\r\n                Security Question: \r\n                <textarea\r\n                readOnly={true}\r\n                value={this.state.resetQuestion}\r\n                className=\"form-control form-text\"\r\n                rows=\"3\"\r\n                cols=\"35\"\r\n                />\r\n            </label>\r\n            <label>\r\n                Security Answer: \r\n                <textarea\r\n                className=\"form-control form-text\"\r\n                placeholder=\"Enter Security Question Answer\"\r\n                ref={this.securityAnswerRef}\r\n                rows=\"3\"\r\n                cols=\"35\"\r\n                />\r\n            </label>\r\n            <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n            </button>\r\n            </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n//handleResetPassword: When the user clicks on the \"Reset Password\" dialog box\r\n//button, we need check whether the passwords match. If they do,\r\n//we reset the password and log the user in. \r\nhandleResetPassword = async(event) => {\r\n    event.preventDefault();\r\n    if (this.resetPasswordRef.current.value != this.resetPasswordRepeatRef.current.value) { \r\n        alert(\"Sorry, The passwords you entered do not match. Please try again.\");\r\n        this.resetPasswordRepeatRef.current.select();\r\n        return;\r\n    }\r\n    const resetInfo = {userId: this.state.resetEmail,\r\n                        answer: this.state.resetAnswer,\r\n                        newPassword: this.resetPasswordRef.current.value};\r\n    const res = await fetch('/resetpassword', {\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(resetInfo)}); \r\n    const text = await res.text();\r\n    alert(text);   \r\n    this.resetPasswordRef.current.value = \"\";\r\n    this.resetPasswordRepeatRef.current.value = \"\";\r\n    this.setState({showPasswordResetDialog: false}); \r\n}\r\n\r\n//renderPasswordResetDialog -- Present a dialog box for user to enter answer\r\n//to their security question.\r\nrenderPasswordResetDialog = () => {\r\n    return (\r\n    <div className=\"modal\" role=\"dialog\">\r\n      <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h3 className=\"modal-title\"><b>Reset Password</b>\r\n              <button className=\"close-modal-button\" \r\n                onClick={() => {this.setState({resetEmail: \"\", \r\n                                 resetQuestion: \"\",\r\n                                 resetAnswer: \"\",\r\n                                 showPasswordResetDialog: false})}}>\r\n                &times;</button>\r\n            </h3>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={this.handleResetPassword}>\r\n            <label>\r\n                New Password: \r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"Enter new password\"\r\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                className=\"form-control form-text\"\r\n                ref={this.resetPasswordRef}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label>\r\n                Repeat New Password: \r\n                <input\r\n                type=\"password\"\r\n                placeholder=\"Repeat new password\"\r\n                className=\"form-control form-text\"\r\n                ref={this.resetPasswordRepeatRef}\r\n                />\r\n            </label>\r\n            <button role=\"submit\" className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n            </button>\r\n            </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n//Render the Login Page\r\nrender() {\r\n    return(\r\n    <div id=\"login-mode-div\" className=\"padded-page\">\r\n    <center>\r\n        <h1 />\r\n        <form onSubmit={this.handleLoginSubmit}>\r\n        <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n            Email:\r\n            <input\r\n            ref={this.emailInputRef}\r\n            className=\"form-control login-text\"\r\n            type=\"email\"\r\n            placeholder=\"Enter Email Address\"\r\n            id=\"emailInput\"\r\n            pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n            required={true}\r\n            />\r\n        </label>\r\n        <p />\r\n        <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n            Password:\r\n            <input\r\n            ref={this.passwordInputRef}\r\n            className=\"form-control login-text\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            required={true}\r\n            />\r\n        </label>\r\n        <p className=\"bg-danger login-error-msg-text\">{this.state.loginMsg}</p>\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n            <span className={this.state.loginBtnIcon}/>\r\n            &nbsp;{this.state.loginBtnLabel}\r\n        </button>\r\n        <br />\r\n        <p><button type=\"button\" className=\"btn btn-link login-link\" \r\n             onClick={() => {this.setState({showAccountDialog: true});}}>Create an account</button> | \r\n           <button type=\"button\" className=\"btn btn-link login-link\"\r\n             onClick={() => {this.setState({showLookUpAccountDialog: true});\r\n                             this.resetEmail.current.focus();}}>Reset your password</button>\r\n        </p>\r\n        <p></p>\r\n            <button type=\"button\" className=\"btn btn-github\"\r\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n              <span className={this.state.githubIcon}></span>&nbsp;{this.state.githubLabel}\r\n            </button>\r\n        <p></p>\r\n        <p>\r\n            <i>Version CptS 489 Sp20 React Oauth + Local + MongoDB</i>\r\n        </p>\r\n        <p>\r\n            <i>© 2020 Professor of Speedgolf. All rights reserved.</i>\r\n        </p>\r\n        </form>\r\n        {this.state.showAccountDialog ? this.renderAccountDialog() : null}\r\n        {this.state.showLookUpAccountDialog ? this.renderLookUpAccountDialog() : null}\r\n        {this.state.showSecurityQuestionDialog ? this.renderSecurityQuestionDialog() : null}\r\n        {this.state.showPasswordResetDialog ? this.renderPasswordResetDialog() : null}\r\n    </center>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"padded-page center\">\r\n            <h1 >Activity Feed</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo<br/>\r\n            &copy; 2017-20 The Professor of Speedgolf. All rights reserved.</p>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;\r\n","import React from 'react';\r\nimport '../styles/modal.css';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //confirmDelete state variable determines whether to show or hide the\r\n    //confirm delete dialog box\r\n    this.state = {confirmDelete: false}; \r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //confirmDelete -- Triggered when the user clicks on the delete button\r\n  //associated with a given round. The id param is the unique property that\r\n  //identifies the round. Set the state variable representing the id\r\n  //of the item to be deleted and set the confirmDelete state variable to true\r\n  //to force a re-render with the confirm delete modal dialog box showing.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({confirmDelete: true});\r\n  }\r\n\r\n  //doDelete -- Triggered when the user clicks on the \"Yes Delete\" button in\r\n    //the confirm delete dialog box. Call upon parent component's deleteRound to\r\n    //to actually performt he deletion of the round currently flagged for\r\n    //deletion and toggle the confirmDelete state variable to hide the confirm\r\n    //dialog box.\r\n    doDelete = () => {\r\n      this.props.deleteRound();\r\n      this.setState({confirmDelete: false});\r\n    }\r\n\r\n  //cancelDelete -- Triggered when the user chooses to cancel a delete\r\n  //operation. We just need to update state to toggle confirmDelete to false\r\n  cancelDelete = () => {\r\n    this.props.setDeleteId(\"\"); \r\n    this.setState({confirmDelete: false});\r\n  }\r\n\r\n  //renderConfirmDeleteDialog: presents user with dialog to confirm deletion\r\n  //of round. Credit: https://getbootstrap.com/docs/4.0/components/modal/\r\n  renderConfirmDeleteDialog = () => {\r\n      return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n          <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <p className=\"modal-title\">Confirm Round Deletion</p>\r\n                  <button className=\"close-modal-button\" onClick={this.cancelDelete}>\r\n                    &times;</button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <h4>Are you sure that you want to delete this round?</h4>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-primary btn-color-scheme\"\r\n                      onClick={this.doDelete}>\r\n                    Yes, delete round</button>\r\n                    <button className=\"btn btn-secondary\" \r\n                      onClick={this.cancelDelete}>\r\n                    No, do not delete round</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n    let table = [];\r\n    for (const r in this.props.rounds) {\r\n      table.push(\r\n        <tr key={r}>\r\n          <td>{this.props.rounds[r].date}</td>\r\n          <td>{this.props.rounds[r].course}</td>\r\n          <td>{(Number(this.props.rounds[r].strokes) + \r\n                Number(this.props.rounds[r].minutes)) +\r\n                \":\" + this.props.rounds[r].seconds + \" (\" + \r\n                this.props.rounds[r].strokes + \r\n                \" in \" + this.props.rounds[r].minutes + \":\" + \r\n                this.props.rounds[r].seconds + \")\"}\r\n          </td>\r\n          <td><button onClick={this.props.menuOpen ? null : () => this.editRound(r)}>\r\n                <span className=\"fa fa-eye\"></span></button></td>\r\n          <td><button onClick={this.props.menuOpen ? null : () => this.confirmDelete(r)}>\r\n                <span className=\"fa fa-trash\"></span></button></td>\r\n        </tr> \r\n    );\r\n  }\r\n  return table;\r\n}\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.confirmDelete ? this.renderConfirmDeleteDialog() : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n//RoundForm -- this component presents a controlled form through which the user\r\n//can enter a new round or edit an existing round.\r\nclass RoundForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      //Create date object for today, taking time zone into consideration\r\n      let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n      //store date as ISO string\r\n      if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n        //If logging a new round, the starting state is a default round with\r\n        //today's date.\r\n        this.state = {date:  today.toISOString().substr(0,10), \r\n                    course: \"\",\r\n                    type: \"practice\",\r\n                    holes: \"18\",\r\n                    strokes: 80,\r\n                    minutes: 50,\r\n                    seconds: \"00\",\r\n                    notes: \"\",\r\n                    faIcon: \"fa fa-save\",\r\n                    btnLabel: \"Save Round Data\"}\r\n      } else {\r\n        //if editing an existing round, the starting state is the round's\r\n        //current data\r\n        this.state = this.props.startData;\r\n        this.state.faIcon = \"fa fa-edit\";\r\n        this.state.btnLabel = \"Update Round Data\";\r\n      }\r\n  }\r\n  \r\n  //handleChange -- Look for changes to the seconds field, padding any entry\r\n  //less than 10 with a 0 so that seconds are displayed properly.\r\n  handleChange = (event) => {\r\n      const name = event.target.name;\r\n      if (name === \"seconds\") {\r\n        this.setState({seconds: (event.target.value.length < 2 ? \"0\" + event.target.value : \r\n          event.target.value)});\r\n      } else {\r\n        this.setState({[name]: event.target.value});\r\n      }\r\n    }\r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n      //start spinner\r\n      this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                     btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                  \"Saving...\" : \"Updating...\")});\r\n      //Prepare current round data to be saved\r\n      let roundData = this.state;\r\n      delete roundData.faIcon;\r\n      delete roundData.btnLabel;\r\n      //call saveRound on 1 second delay to show spinning icon\r\n      setTimeout(this.props.saveRound,1000,roundData); \r\n      event.preventDefault(); \r\n    }\r\n    \r\n    //computeSGS -- properly computes speedgolf score based on the values of the\r\n    //strokes, minutes and seconds fields. We choose not to save SGS in state\r\n    //it can be readily computed.\r\n    computeSGS = () => {\r\n      return (Number(this.state.strokes) + Number(this.state.minutes)) \r\n                  + \":\" + this.state.seconds;\r\n    }\r\n  \r\n    //render -- renders the form to enter round data.\r\n    render() {\r\n      return (\r\n        <div className = \"padded-page\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS()} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}</button>\r\n          </center>\r\n        </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n  export default RoundForm;","//Rounds -- A parent component for the app's \"rounds\" mode.sidemenu-user\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a\r\n//prop.\r\n\r\nimport React from 'react';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor(props) {\r\n          super(props);\r\n          let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\")); \r\n          this.state = {rounds: data[this.props.user.id].rounds,\r\n                        roundCount: data[this.props.user.id].roundCount,\r\n                        deleteId: \"\",\r\n                        editId: \"\"};          \r\n    }\r\n\r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.setState({deleteId: val});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.setState({editId: val});\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round uniquely identified by\r\n    //this.state.editId, commit to local storage, reset editId to empty and\r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\")); \r\n        let newRounds = this.state.rounds;\r\n        newRounds[this.state.editId] = newData;\r\n        data[this.props.user.id].rounds = newRounds;\r\n        localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        this.setState({rounds: newRounds, editId: \"\"});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, commit to local storage, and reset deleteId to empty.\r\n    deleteRound = () => {\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n        let newRounds = this.state.rounds;\r\n        delete newRounds[this.state.deleteId];\r\n        data[this.props.user.id].rounds = newRounds;\r\n        localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        this.setState({rounds: newRounds, deleteId: \"\"});\r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, add the round\r\n    //to the current user's list of rounds, commit to local storage, and toggle\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = (newData) => {\r\n        let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n        let newRounds = this.state.rounds;\r\n        newData.roundNum = this.state.roundCount + 1;\r\n        newRounds[this.state.roundCount + 1] = newData;\r\n        data[this.props.user.id].rounds = newRounds;\r\n        data[this.props.user.id].roundCount = this.state.roundCount + 1;\r\n        localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n        this.setState({rounds: newRounds, roundCount: newData.roundNum});\r\n        this.props.changeMode(AppMode.ROUNDS);\r\n    }\r\n\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                  <React.Fragment>\r\n                  <RoundsTable \r\n                    rounds={this.state.rounds}\r\n                    setEditId={this.setEditId}\r\n                    setDeleteId={this.setDeleteId}\r\n                    deleteRound={this.deleteRound}\r\n                    changeMode={this.props.changeMode}\r\n                    menuOpen={this.props.menuOpen} /> \r\n                  <FloatingButton\r\n                      handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                      menuOpen={this.props.menuOpen}\r\n                      icon={\"fa fa-plus\"} />\r\n                  </React.Fragment>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                       mode={this.props.mode}\r\n                       startData={\"\"} \r\n                       saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                return (\r\n                    <RoundForm\r\n                      mode={this.props.mode}\r\n                      startData={this.state.rounds[this.state.editId]} \r\n                      saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n}    \r\n\r\n    export default Rounds;","import React from 'react';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n       render() {\r\n        return (\r\n        <div className=\"padded-page center\">\r\n            <h1>Courses</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>\r\n            Version CptS 489 React Demo<br/>\r\n            &copy; 2017-20 The Professor of Speedgolf. All rights reserved.</p>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport LoginPage from './LoginPage.js';\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AppMode from \"./../AppMode.js\";\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Courses\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  user: \"\",\r\n                  showAbout: false,\r\n                  authenticated: false,\r\n                  };\r\n  }\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  //Set the User Id object, which contains the following props:\r\n  //id, username, provider, profileImageUrl\r\n  setUser = (userObj) => {\r\n    this.setState({user: userObj});\r\n  }\r\n\r\n  //setAuthenticated -- Given auth (true or false), update authentication state.\r\n  setAuthenticated = (auth) => {\r\n    this.setState({authenticated: auth});\r\n  }\r\n\r\n\r\n  //componentDidMount -- Add a window-level click handler to close the\r\n  //side menu if it is open. In addition, if we are using a non-local auth\r\n  //strategy, we need to check if we're authenticated and set the mode var appropriately.\r\n  componentDidMount() {\r\n    window.addEventListener(\"click\",this.handleClick);\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to re-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            let data = JSON.parse(localStorage.getItem(\"speedgolfUserData\"));\r\n            if (data == null) {\r\n              data = {}; //create empty database (localStorage)\r\n            }\r\n            if (!data.hasOwnProperty(obj.user.id)) {\r\n              //create new user with this id in database (localStorage)\r\n              data[obj.user.id] = {\r\n                accountInfo: {\r\n                  provider: obj.user.provider,\r\n                  password: '',\r\n                  securityQuestion: '',\r\n                  securityAnswer: ''\r\n                },\r\n                rounds: {}, \r\n                roundCount: 0\r\n              };\r\n              //Commit to localStorage:\r\n              localStorage.setItem(\"speedgolfUserData\",JSON.stringify(data));\r\n            } \r\n            //Update current user\r\n            this.setState({\r\n              authenticated: true,\r\n              user: obj.user,\r\n              mode: AppMode.FEED //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n//We remove the event listener when the component\r\n//unmounts. This is a best practice. \r\ncomponentWillUnmount() {\r\n  window.removeEventListener(\"click\",this.handleClick);\r\n}\r\n\r\n  //When the user clicks anywhere on the app and the menu is open, close it.\r\n  //This function takes advantage of event bubbling.\r\n  handleClick = (event) => {\r\n    if (this.state.menuOpen) {\r\n      this.closeMenu();\r\n    }\r\n    event.stopPropagation();\r\n  }\r\n\r\n  toggleAbout = () => {\r\n    this.setState(prevState => ({showAbout: !prevState.showAbout}));\r\n  }\r\n\r\n  renderAbout = () => {\r\n    return (\r\n      <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3 className=\"modal-title\"><b>About SpeedScore</b>\r\n                <button className=\"close-modal-button\" onClick={this.toggleAbout}>\r\n                  &times;</button>\r\n              </h3>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <img\r\n              src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n              height=\"200\" width=\"200\"/>\r\n              <h3>The World's First and Only Suite of Apps for\r\n              Speedgolf</h3>\r\n              <p>Version CptS 489 Sp20, Build W06C2 (React)<br/>\r\n              &copy; 2017-20 The Professor of Speedgolf. All rights\r\n              reserved.\r\n              </p>\r\n              <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC. It leverages\r\n                Google server-side technologies.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.toggleAbout}>OK</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div onClick={this.handleClick}>\r\n        <NavBar \r\n          title={modeTitle[this.state.mode]}\r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n        <SideMenu \r\n          mode={this.state.mode}\r\n          menuOpen={this.state.menuOpen}\r\n          changeMode={this.handleChangeMode}\r\n          user={this.state.user}\r\n          showAbout={this.toggleAbout}/>\r\n        <ModeBar \r\n          mode={this.state.mode} \r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}/>\r\n        <ModePage menuOpen={this.state.menuOpen}\r\n          mode={this.state.mode} \r\n          changeMode={this.handleChangeMode}\r\n          setAuthenticated={this.setAuthenticated}\r\n          user={this.state.user}\r\n          setUser={this.setUser}/>\r\n        {this.state.showAbout ? this.renderAbout() : null}\r\n      </div>\r\n      );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './styles/index.css';\r\nimport './styles/modal.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}